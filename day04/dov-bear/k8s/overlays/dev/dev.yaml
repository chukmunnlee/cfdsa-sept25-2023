apiVersion: v1
kind: Namespace
metadata:
  labels:
    env: dev
  name: devns
---
apiVersion: v1
data:
  INSTANCE_NAME: my dev bear
kind: ConfigMap
metadata:
  labels:
    env: dev
  name: dev-dov-cm-h97hhh27mg
  namespace: devns
---
apiVersion: v1
kind: Service
metadata:
  labels:
    env: dev
  name: dev-dov-svc
  namespace: devns
spec:
  ports:
  - port: 8080
    targetPort: 3000
  selector:
    app: dov
    dept: eng
    env: dev
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: dev
  name: dev-dov-deploy
  namespace: devns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dov
      dept: eng
      env: dev
  template:
    metadata:
      labels:
        app: dov
        dept: eng
        env: dev
      name: dov-po
    spec:
      containers:
      - env:
        - name: INSTANCE_HASH
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        envFrom:
        - configMapRef:
            name: dev-dov-cm-h97hhh27mg
        image: chukmunnlee/dov-bear:v5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
        name: dov-container
        ports:
        - containerPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    env: dev
  name: dev-dov-ing
  namespace: devns
spec:
  ingressClassName: nginx
  rules:
  - host: dev-dov-188.166.196.227.nip.io
    http:
      paths:
      - backend:
          service:
            name: dev-dov-svc
            port:
              number: 8080
        path: /
        pathType: Prefix
